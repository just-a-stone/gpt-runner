name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Install Dependencies And Build
        run: pnpm i

      - name: Package Alias Copy
        run: pnpm pkg:alias

      - name: Publish to NPM
        run: pnpm -r publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_CONFIG_PROVENANCE: true

      - name: Publish to VSCE & OVSX
        run: npm run publish
        working-directory: ./packages/gpt-runner-vscode
        env:
          VSCE_TOKEN: ${{secrets.VSCE_TOKEN}}
          OVSX_TOKEN: ${{secrets.OVSX_TOKEN}}

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      # Publish the plugin to the Marketplace
      # - name: Publish Plugin
      #   working-directory: ./packages/gpt-runner-intellij
      #   env:
      #     PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
      #     CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
      #     PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      #     PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
      #   run: chmod +x gradlew && ./gradlew publishPlugin

      - name: Branch name
        id: branch_name
        run: |
          echo SOURCE_NAME=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT
          echo SOURCE_BRANCH=${GITHUB_REF#refs/heads/} >> $GITHUB_OUTPUT
          echo SOURCE_TAG=${GITHUB_REF#refs/tags/} >> $GITHUB_OUTPUT

      - name: Build Plugin
        working-directory: ./packages/gpt-runner-intellij
        run: chmod +x gradlew && ./gradlew buildPlugin

      # Upload artifact as a release asset
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./packages/gpt-runner-intellij
        run: gh release upload ${{ steps.branch_name.outputs.SOURCE_TAG }} ./build/libs/*
